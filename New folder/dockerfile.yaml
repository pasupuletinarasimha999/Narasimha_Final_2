R- Run, A-Add, F-From, E-EntryPoint, E-Expose, C-CMD, C-Copy, O-Onbuild, W-WorkDIR
RAFEECC OW
--------------
# Define the base image
FROM python:3.9

# Set environment variable
ENV APP_NAME my_web_app

# Expose port for the application (documentation purpose)
EXPOSE 8000

# Create a working directory
WORKDIR /app

ADD sampleLogin.war /usr/local/tomcat/webapps/
# Copy application code (assuming it's in the current directory)
COPY . .

# Install dependencies
RUN pip install -r requirements.txt

# Set user for the application process
USER myuser

# Define the default command (can be overridden)
CMD ["catalina.sh", "run"]

# Inform about copying source code later
ONBUILD COPY . .

=====

# Build from the base image
FROM base-image:latest

# Copy application source code (assuming it's in the current directory)
COPY . .

# Install application dependencies
RUN yarn install

# Define the default command
CMD ["yarn", "start"]




ENTRYPOINT: Specifies the main command to be run when the container starts. It's meant to be the primary executable of the container.you can only have one ENTRYPOINT and one CMD instruction. If you specify multiple ENTRYPOINT or CMD instructions in a Dockerfile, only the last one will take effect.If you need to run multiple commands, you should use a script to orchestrate these commands
CMD: Provides default arguments for the ENTRYPOINT or specifies the entire command if ENTRYPOINT is not set.