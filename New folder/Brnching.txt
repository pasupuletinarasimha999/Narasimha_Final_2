1. Main Branches
main (or master) Branch: This is the production-ready branch. It contains the stable code that is ready to be deployed. Only thoroughly tested and approved code is merged into this branch.
develop Branch: This branch contains the latest development changes. It is the integration branch for features and fixes. Developers branch off from develop to work on new features or bug fixes.
2. Supporting Branches
Feature Branches: These branches are used to develop new features. They branch off from develop and are merged back into develop when the feature is complete.
Naming convention: feature/feature-name
Example: feature/user-authentication
Release Branches: These branches are used to prepare for a new production release. They branch off from develop and are merged into both main and develop after the release.
Naming convention: release/release-version
Example: release/1.0.0
Hotfix Branches: These branches are used to quickly fix critical issues in the production code. They branch off from main and are merged back into both main and develop.
Naming convention: hotfix/hotfix-name
Example: hotfix/critical-bug-fix


Workflow Example
Starting a New Feature
Create a new feature branch from develop:
     git checkout develop
     git pull origin develop
     git checkout -b feature/user-authentication
     ```
Work on the feature and commit changes:
     git add .
     git commit -m "Implement user authentication"
     ```
Completing a Feature
Merge the feature branch back into develop:
     git checkout develop
     git pull origin develop
     git merge feature/user-authentication
     git push origin develop
     ```
Preparing for a Release
Create a release branch from develop:
     git checkout develop
     git pull origin develop
     git checkout -b release/1.0.0
     ```
Perform final testing and bug fixes on the release branch. Commit any changes:
     git add .
     git commit -m "Final bug fixes for release 1.0.0"
     ```


Releasing
Merge the release branch into main and tag the release:
     git checkout main
     git pull origin main
     git merge release/1.0.0
     git tag -a v1.0.0 -m "Release 1.0.0"
     git push origin main --tags
     ```
Merge the release branch back into develop to ensure any changes are included in future development:
     git checkout develop
     git pull origin develop
     git merge release/1.0.0
     git push origin develop
     ```


Hotfixing
Create a hotfix branch from main:
     git checkout main
     git pull origin main
     git checkout -b hotfix/critical-bug-fix
     ```
Fix the issue and commit changes:
     git add .
     git commit -m "Fix critical bug"
     ```
Merge the hotfix branch back into main and tag the hotfix:
     git checkout main
     git pull origin main
     git merge hotfix/critical-bug-fix
     git tag -a v1.0.1 -m "Hotfix 1.0.1"
     git push origin main --tags
     ```
Merge the hotfix branch back into develop:
     git checkout develop
     git pull origin develop
     git merge hotfix/critical-bug-fix
     git push origin develop
     ```