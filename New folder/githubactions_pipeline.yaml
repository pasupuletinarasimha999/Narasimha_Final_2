# .github/workflows/ci-pipeline.yml
name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  GLOBAL_VAR: value

jobs:
  example-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10, 12, 14]
    env:
      JOB_VAR: value
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: $${{ matrix.node-version }}

      - name: Example step
        run: echo $${{ env.GLOBAL_VAR }} $${{ env.JOB_VAR }}

  test:
    runs-on: ubuntu-latest
    needs: example-job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Run tests
        run: echo "Testing"

# .github/workflows/approval-and-deployment.yml
name: Approval and Deployment

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  approval:
    runs-on: ubuntu-latest
    steps:
      - name: Awaiting approval
        run: echo "Please approve this job in the GitHub UI."

  deploy:
    runs-on: ubuntu-latest
    needs: approval
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: $${{ runner.os }}-node-$${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            $${{ runner.os }}-node-

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Deploy application
        run: npm run deploy
        continue-on-error: true

# .github/workflows/scheduled-workflow.yml
name: Scheduled Workflow

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  example-job:
    uses: owner/repo/.github/workflows/workflow.yml@main
